[{"path":"/articles/pr2database.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get started","text":"Install GitHub web site using devtools package","code":"install.packages(devtools) devtools::install_github(\"pr2database/pr2database\") * installing *source* package 'pr2database' ... ** R ** data *** moving datasets to lazyload DB ** byte-compile and prepare package for lazy loading ** help *** installing help indices   converting help for package 'pr2database'     finding HTML links ... fini     pr2                                     html   ** building package indices ** testing if installed package can be loaded *** arch - i386 *** arch - x64 * DONE (pr2database) In R CMD INSTALL"},{"path":"/articles/pr2database.html","id":"loading-the-database","dir":"Articles","previous_headings":"","what":"Loading the database","title":"Get started","text":"PR2 database provided data frame (tibble). join following tables: * pr2_main * pr2_taxonomy * pr2_sequence * pr2_metadata","code":"library(\"pr2database\")  data(\"pr2\")  # List of the different columns available - see the help of the package for information on each field  colnames(pr2) #>  [1] \"pr2_accession\"              \"kingdom\"                    #>  [3] \"supergroup\"                 \"division\"                   #>  [5] \"class\"                      \"order\"                      #>  [7] \"family\"                     \"genus\"                      #>  [9] \"species\"                    \"genbank_accession\"          #> [11] \"start\"                      \"end\"                        #> [13] \"label\"                      \"gene\"                       #> [15] \"organelle\"                  \"reference_sequence\"         #> [17] \"added_version\"              \"edited_version\"             #> [19] \"edited_by\"                  \"edited_remark\"              #> [21] \"remark\"                     \"seq_id\"                     #> [23] \"sequence\"                   \"sequence_length\"            #> [25] \"ambiguities\"                \"sequence_hash\"              #> [27] \"gb_date\"                    \"gb_division\"                #> [29] \"gb_definition\"              \"gb_organism\"                #> [31] \"gb_organelle\"               \"gb_taxonomy\"                #> [33] \"gb_strain\"                  \"gb_culture_collection\"      #> [35] \"gb_clone\"                   \"gb_isolate\"                 #> [37] \"gb_isolation_source\"        \"gb_specimen_voucher\"        #> [39] \"gb_host\"                    \"gb_collection_date\"         #> [41] \"gb_environmental_sample\"    \"gb_country\"                 #> [43] \"gb_lat_lon\"                 \"gb_collected_by\"            #> [45] \"gb_note\"                    \"gb_publication\"             #> [47] \"gb_authors\"                 \"gb_journal\"                 #> [49] \"eukref_name\"                \"eukref_source\"              #> [51] \"eukref_env_material\"        \"eukref_env_biome\"           #> [53] \"eukref_biotic_relationship\" \"eukref_specific_host\"       #> [55] \"eukref_geo_loc_name\"        \"eukref_notes\"               #> [57] \"pr2_sample_type\"            \"pr2_sample_method\"          #> [59] \"pr2_latitude\"               \"pr2_longitude\"              #> [61] \"pr2_depth\"                  \"pr2_ocean\"                  #> [63] \"pr2_sea\"                    \"pr2_sea_lat\"                #> [65] \"pr2_sea_lon\"                \"pr2_country\"                #> [67] \"pr2_location\"               \"pr2_location_geoname\"       #> [69] \"pr2_location_geotype\"       \"pr2_location_lat\"           #> [71] \"pr2_location_lon\"           \"pr2_sequence_origin\"        #> [73] \"metadata_remark\"            \"pr2_continent\"              #> [75] \"pr2_country_geocode\"        \"pr2_country_lat\"            #> [77] \"pr2_country_lon\"            \"silva_taxonomy\"             #> [79] \"organelle_code\""},{"path":[]},{"path":"/articles/pr2database.html","id":"install-and-load-the-libraries","dir":"Articles","previous_headings":"","what":"Install and load the libraries","title":"Get started","text":"following examples makes use specifc R libraries Install libraries Load libraries","code":"install.packages(\"dplyr\")      # For filtering the data install.package(\"ggplot2\")     # To plot data install.package(\"maps\")        # To plot maps  source(\"https://bioconductor.org/biocLite.R\")  # This package is on Bioconductor biocLite(\"Biostrings\")         # To save fasta files library(dplyr)   library(ggplot2)    # For plots   library(Biostrings) # To save fasta files"},{"path":"/articles/pr2database.html","id":"selecting-sequences-from-a-specific-taxon","dir":"Articles","previous_headings":"","what":"Selecting sequences from a specific taxon","title":"Get started","text":"Let us select available sequences Mamiellophyceae Ostreococcus","code":"# Filter only the sequences for which the column genus contains Ostreococcus   pr2_ostreo <- pr2 %>% dplyr::filter(genus == \"Ostreococcus\")    # Select only the columns of interest   pr2_ostreo <- pr2_ostreo %>% dplyr::select( genbank_accession, species,                                                pr2_sample_type, gb_strain, gb_clone,                                                pr2_latitude, pr2_longitude,                                                sequence_length, sequence, reference_sequence  )      pr2_ostreo #> # A tibble: 290 x 10 #>    genbank_accession species     pr2_sample_type gb_strain gb_clone pr2_latitude #>    <chr>             <chr>       <chr>           <chr>     <chr>           <dbl> #>  1 AF525872          Ostreococc~ environmental   NA        UEPACIp5         NA   #>  2 EU562149          Ostreococc~ environmental   NA        IND2.6           NA   #>  3 AY425309          Ostreococc~ environmental   NA        RA01041~         NA   #>  4 GQ426346          Ostreococc~ culture         CB6       NA               NA   #>  5 KC583118          Ostreococc~ environmental   NA        RS.12f.~         NA   #>  6 JN862906          Ostreococc~ culture         BCC48000  NA               NA   #>  7 JQ692065          Ostreococc~ environmental   NA        PUPF_60         -43.3 #>  8 FR874749          Ostreococc~ environmental   NA        1815F12          60.3 #>  9 FJ431431          Ostreococc~ environmental   NA        RA07100~         NA   #> 10 EU561670          Ostreococc~ environmental   NA        IND1.11         -35.0 #> # ... with 280 more rows, and 4 more variables: pr2_longitude <dbl>, #> #   sequence_length <int>, sequence <chr>, reference_sequence <int>"},{"path":"/articles/pr2database.html","id":"exporting-the-sequences-to-fasta","dir":"Articles","previous_headings":"","what":"Exporting the sequences to fasta","title":"Get started","text":"save Ostreococcus sequences FASTA file. easy done bioconductor package BioStrings. fasta file look follows","code":"# Importing the sequence in a Biostring set     seq_ostreo <- Biostrings::DNAStringSet(pr2_ostreo$sequence)    # Constructing the name of each sequecne (the first line of the fasta file)   # using the genbank accession, species name, strain name and clone name    names(seq_ostreo) <- paste(pr2_ostreo$genbank_accession, pr2_ostreo$species,                              \"strain\",pr2_ostreo$gb_strain,                              \"clone\",pr2_ostreo$gb_clone,                                sep=\"|\")    # Displaying the Biostring set   seq_ostreo #> DNAStringSet object of length 290: #>       width seq                                             names                #>   [1]  1766 ACCTGGTTGATCCTGCCAGTAG...AGGTGAACCTGCAGAAGGATCA AF525872|Ostreoco... #>   [2]   836 AAAGCTCGTAGTCGGATTTTGG...TCTGGGCCGCACGCGCGCTACA EU562149|Ostreoco... #>   [3]  1728 GCCAGTAGTCATATGCTTGTCT...GAGAAGTCGTAACAAGGTTTCC AY425309|Ostreoco... #>   [4]  1652 AGCCATGCATGTCTAAGTATAA...TGGATTACCGTGGGAAATTCGT GQ426346|Ostreoco... #>   [5]  1764 CCTGGTTGATCCTGCCAGTAGT...TAGGTGAACCTGCAGAAGGATC KC583118|Ostreoco... #>   ...   ... ... #> [286]  1766 ACCTGGTTGATCCTGCCAGTAG...AGGTGAACCTGCGGAAGGATCA CR954212|Ostreoco... #> [287]  1609 TGCGAATGGCTCATTAAATCAG...CCATTGGATTACCGTGGGAAAT KT860897|Ostreoco... #> [288]   656 TTTAGTCGGATTTTGGCTGAGA...ATGGCCGTTCTTAATTGGGGGA KT860646|Ostreoco... #> [289]   672 GCTCGTAGTCGGACTTTGGCTG...GTTGGTGGAGTGATTTGTCTGG KT860808|Ostreoco... #> [290]   672 GCTCGTAGTCGGACTTTGGCTG...TAGTTGGTGGAGTGATTTGTCT KT860809|Ostreoco...        # Saving the sequences as a fasta file   Biostrings::writeXStringSet(seq_ostreo, \"examples/pr2_ostreo.fasta\", width = 80) >AF525872|Ostreococcus_lucimarinus|strain|NA|clone|UEPACIp5 ACCTGGTTGATCCTGCCAGTAGTCATATGCTTGTCTCAAAGATTAAGCCATGCATGTCTAAGTATAAGCGTTATACTGTG AAACTGCGAATGGCTCATTAAATCAGCAATAGTTTCTTTGGTGGTGTTTACTACTCGGATAACCGTAGTAATTCTAGAGC TAATACGTGCGTAAATCCCGACTTCGGAAGGGACGTATTTATTAGATAAAGACCG... >EU562149|Ostreococcus_lucimarinus|strain|NA|clone|IND2.6 AAAGCTCGTAGTCGGATTTTGGCTGAGAACGGTCGGTCCGCCGTTAGGTGTGCACTGACTGGTCTCAGCTTCCTGGTGAG GAGGTGTGCTTCATCGCCACTTAGTCACCGTGGTTACTTTGAAAAAATTAGAGTGTTCAAAGCGGGCTTACGCTTGAATA TATTAGCATGGAATAACACCATAGGACTCCTGTCCTATTTCGTTGGTCTCGGGACGGGAGTAATGATTAAGATGAACAGT TGGGGGCATTCGTATTTCATTGTCAGAGGTGAAATTCTTGGATTT... >AY425309|Ostreococcus_lucimarinus|strain|NA|clone|RA010412.39 GCCAGTAGTCATATGCTTGTCTCAAAGATTAAGCCATGCATGTCTAAGTATAAGCGTTATACTGTGAAACTGCGAATGGC TCATTAAATCAGCAATAGTTTCTTTGGTGGTGTTTACTACTCGGATAACCGT..."},{"path":"/articles/pr2database.html","id":"doing-an-histogram-of-the-sequence-length","dir":"Articles","previous_headings":"","what":"Doing an histogram of the sequence length","title":"Get started","text":"","code":"ggplot(pr2_ostreo) +      geom_histogram(aes(sequence_length), binwidth = 50, fill=\"blue\") +      xlim(0,2000) + xlab(\"Sequence length\") + ylab(\"Number of sequences\") +      ggtitle(\"Ostreococcus sequences\")"},{"path":"/articles/pr2database.html","id":"drawing-a-map-of-sequence-locations","dir":"Articles","previous_headings":"","what":"Drawing a map of sequence locations","title":"Get started","text":"","code":"library(maps)   world <- map_data(\"world\")    ggplot() +      geom_polygon(data = world, aes(x=long, y = lat, group = group), fill=\"grey\") +      coord_fixed(1.3) +     geom_point(data=pr2_ostreo, aes(x=pr2_longitude, y=pr2_latitude), fill=\"blue\", size=2, shape=21) +      ggtitle(\"Ostreococcus\")"},{"path":"/articles/pr2database.html","id":"selecting-reference-sequences","dir":"Articles","previous_headings":"","what":"Selecting reference sequences","title":"Get started","text":"Reference sequences subset sequences representative major taxa group. Usually long sequences can used build reference alignment (compare histogram reference PR2 sequences).","code":"pr2_ostreo_reference <- pr2_ostreo %>%    filter(reference_sequence == 1)    pr2_ostreo_reference  #> # A tibble: 32 x 10 #>    genbank_accession species     pr2_sample_type gb_strain gb_clone pr2_latitude #>    <chr>             <chr>       <chr>           <chr>     <chr>           <dbl> #>  1 AF525872          Ostreococc~ environmental   NA        UEPACIp5           NA #>  2 JN862906          Ostreococc~ culture         BCC48000  NA                 NA #>  3 AY425308          Ostreococc~ culture         RCC 356   1                  NA #>  4 AF525852          Ostreococc~ environmental   NA        UEPACDp1           NA #>  5 AF525858          Ostreococc~ environmental   NA        UEPAC30~           NA #>  6 AF525857          Ostreococc~ environmental   NA        UEPAC05~           NA #>  7 AF525861          Ostreococc~ environmental   NA        UEPACGp3           NA #>  8 AF525848          Ostreococc~ environmental   NA        UEPACAp1           NA #>  9 AF525859          Ostreococc~ environmental   NA        UEPAC30~           NA #> 10 AF525855          Ostreococc~ environmental   NA        UEPACXp1           NA #> # ... with 22 more rows, and 4 more variables: pr2_longitude <dbl>, #> #   sequence_length <int>, sequence <chr>, reference_sequence <int>      ggplot(pr2_ostreo_reference) +    geom_histogram(aes(sequence_length), binwidth = 50, fill=\"blue\") +    xlim(0,2000) + xlab(\"Sequence length\") + ylab(\"Number of sequences\") +    ggtitle(\"Ostreococcus reference sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"pr2-fields","dir":"Articles","previous_headings":"","what":"PR2 fields","title":"PR2 statistics","text":"","code":"colnames(pr2) #>  [1] \"pr2_accession\"              \"kingdom\"                    #>  [3] \"supergroup\"                 \"division\"                   #>  [5] \"class\"                      \"order\"                      #>  [7] \"family\"                     \"genus\"                      #>  [9] \"species\"                    \"genbank_accession\"          #> [11] \"start\"                      \"end\"                        #> [13] \"label\"                      \"gene\"                       #> [15] \"organelle\"                  \"reference_sequence\"         #> [17] \"added_version\"              \"edited_version\"             #> [19] \"edited_by\"                  \"edited_remark\"              #> [21] \"remark\"                     \"seq_id\"                     #> [23] \"sequence\"                   \"sequence_length\"            #> [25] \"ambiguities\"                \"sequence_hash\"              #> [27] \"gb_date\"                    \"gb_division\"                #> [29] \"gb_definition\"              \"gb_organism\"                #> [31] \"gb_organelle\"               \"gb_taxonomy\"                #> [33] \"gb_strain\"                  \"gb_culture_collection\"      #> [35] \"gb_clone\"                   \"gb_isolate\"                 #> [37] \"gb_isolation_source\"        \"gb_specimen_voucher\"        #> [39] \"gb_host\"                    \"gb_collection_date\"         #> [41] \"gb_environmental_sample\"    \"gb_country\"                 #> [43] \"gb_lat_lon\"                 \"gb_collected_by\"            #> [45] \"gb_note\"                    \"gb_publication\"             #> [47] \"gb_authors\"                 \"gb_journal\"                 #> [49] \"eukref_name\"                \"eukref_source\"              #> [51] \"eukref_env_material\"        \"eukref_env_biome\"           #> [53] \"eukref_biotic_relationship\" \"eukref_specific_host\"       #> [55] \"eukref_geo_loc_name\"        \"eukref_notes\"               #> [57] \"pr2_sample_type\"            \"pr2_sample_method\"          #> [59] \"pr2_latitude\"               \"pr2_longitude\"              #> [61] \"pr2_depth\"                  \"pr2_ocean\"                  #> [63] \"pr2_sea\"                    \"pr2_sea_lat\"                #> [65] \"pr2_sea_lon\"                \"pr2_country\"                #> [67] \"pr2_location\"               \"pr2_location_geoname\"       #> [69] \"pr2_location_geotype\"       \"pr2_location_lat\"           #> [71] \"pr2_location_lon\"           \"pr2_sequence_origin\"        #> [73] \"metadata_remark\"            \"pr2_continent\"              #> [75] \"pr2_country_geocode\"        \"pr2_country_lat\"            #> [77] \"pr2_country_lon\"            \"silva_taxonomy\"             #> [79] \"organelle_code\""},{"path":[]},{"path":"/articles/pr2_01_stats.html","id":"all-taxa","dir":"Articles","previous_headings":"","what":"All taxa","title":"PR2 statistics","text":"Total number PR2 sequences : 197602 Number taxa - sequences","code":"pr2_taxa <- pr2 %>% select(kingdom:genus, species) %>% summarise_all(funs(n_distinct(.)))   knitr::kable(pr2_taxa, caption=\"Number of taxa - all sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"photosynthetic-protists","dir":"Articles","previous_headings":"","what":"Photosynthetic protists","title":"PR2 statistics","text":"Number photosynthetic protist sequences : 18529 Number taxa - photosynthetic protist sequences","code":"pr2_taxa <- pr2_photo %>% select(kingdom:genus, species) %>% summarise_all(funs(n_distinct(.)))   knitr::kable(pr2_taxa, caption=\"Number of taxa - photosynthetic protist sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"reference-sequences","dir":"Articles","previous_headings":"","what":"Reference sequences","title":"PR2 statistics","text":"Reference sequences subset PR2 representative taxonomic groups. Number reference sequences : 23551 Number taxa - Reference sequences","code":"pr2_taxa <- pr2_ref %>% select(kingdom:genus, species) %>% summarise_all(funs(n_distinct(.)))   knitr::kable(pr2_taxa, caption=\"Number of taxa - Reference sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"sequence-length","dir":"Articles","previous_headings":"","what":"Sequence length","title":"PR2 statistics","text":"","code":"ggplot(pr2) + geom_histogram(aes(sequence_length), binwidth = 100, fill=\"blue\") +                 xlim(0,3000) + xlab(\"PR2 sequence length\") + ylab(\"Number of sequences\") + ggtitle(\"All sequences\") ggplot(pr2_ref) + geom_histogram(aes(sequence_length), binwidth = 100, fill=\"blue\") +                 xlim(0,3000) + xlab(\"PR2 sequence length\") + ylab(\"Number of sequences\") + ggtitle(\"Reference sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"taxonomic-composition","dir":"Articles","previous_headings":"","what":"Taxonomic composition","title":"PR2 statistics","text":"","code":"pr2_treemap <- function(pr2, level1, level2) {     # Group   pr2_class <- pr2 %>%     count({{level1}},{{level2}}) %>%      filter(!is.na(division)) %>%     ungroup()    # Do a treemap      ggplot(pr2_class, aes(area = n, fill = {{level2}}, subgroup = {{level1}}, label = {{level2}})) +            treemapify::geom_treemap()      ggplot(pr2_class, aes(area = n, fill= {{level1}}, subgroup = {{level1}}, label = {{level2}})) +     treemapify::geom_treemap() +     treemapify::geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE) +     treemapify::geom_treemap_subgroup_border() +     treemapify::geom_treemap_subgroup_text(place = \"centre\", grow = T,                                             alpha = 0.5, colour = \"black\",                                             min.size = 0) +     theme_bw() +     scale_color_brewer() +     guides(fill = FALSE)             }"},{"path":[]},{"path":"/articles/pr2_01_stats.html","id":"all-groups","dir":"Articles","previous_headings":"Division level","what":"All groups","title":"PR2 statistics","text":"","code":"pr2_treemap(pr2, division, class)"},{"path":"/articles/pr2_01_stats.html","id":"reference-sequences-1","dir":"Articles","previous_headings":"Division level","what":"Reference sequences","title":"PR2 statistics","text":"","code":"pr2_treemap(pr2_ref, division, class)"},{"path":"/articles/pr2_01_stats.html","id":"photosynthetic-protists-1","dir":"Articles","previous_headings":"Division level","what":"Photosynthetic protists","title":"PR2 statistics","text":"","code":"pr2_treemap(pr2_photo,division, class)"},{"path":[]},{"path":"/articles/pr2_01_stats.html","id":"all-taxa-1","dir":"Articles","previous_headings":"Genera most represented","what":"All taxa","title":"PR2 statistics","text":"","code":"pr2_genus <- pr2 %>% group_by(class, genus) %>% count() %>% ungroup() %>% top_n(30)    ggplot(pr2_genus) +     geom_col(aes(x=forcats::fct_reorder(stringr::str_c(class,\"-\",genus), n), y=n)) +     coord_flip() +     ggtitle(\"Most represented genera - all\") +     xlab(\"Genera\") + ylab(\"Number of sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"reference-sequences-2","dir":"Articles","previous_headings":"Genera most represented","what":"Reference sequences","title":"PR2 statistics","text":"","code":"pr2_genus <- pr2_ref %>% group_by(class, genus) %>% count() %>% ungroup() %>% top_n(30)    ggplot(pr2_genus) +     geom_col(aes(x=forcats::fct_reorder(stringr::str_c(class,\"-\",genus), n), y=n)) +     coord_flip() +     ggtitle(\"Reference sequences\") +     xlab(\"Genera\") + ylab(\"Number of sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"only-photosynthetic-protists","dir":"Articles","previous_headings":"Genera most represented","what":"Only photosynthetic protists","title":"PR2 statistics","text":"","code":"pr2_genus <- pr2_photo %>% group_by(class, genus) %>% count() %>% ungroup() %>% top_n(30)    ggplot(pr2_genus) +     geom_col(aes(x=forcats::fct_reorder(stringr::str_c(class,\"-\",genus), n), y=n)) +     coord_flip() +     ggtitle(\"Most represented genera - only photosynthetic protists\") +     xlab(\"Genera\") + ylab(\"Number of sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"world-sequence-distribution","dir":"Articles","previous_headings":"","what":"World sequence distribution","title":"PR2 statistics","text":"","code":"map_get_world <- function(resolution=\"coarse\"){   worldMap <- rworldmap::getMap(resolution = resolution) # Change to \"coarse\" for global maps / \"low\" for regional maps   world.points <- fortify(worldMap)   world.points$region <- world.points$id   world.df <- world.points[,c(\"long\",\"lat\",\"group\", \"region\")]   }   map_world <- function(color_continents = \"grey80\", color_borders = \"white\", resolution = \"coarse\") {    # Background map using the maps package   # world.df <- map_data(\"world\")    world.df <- map_get_world(resolution)    map <- ggplot() +     geom_polygon(data = world.df, aes(x=long, y = lat, group = group), fill=color_continents, color=color_borders) +     # scale_fill_manual(values= color_continents , guide = FALSE) +     scale_x_continuous(breaks = (-4:4) * 45) +     scale_y_continuous(breaks = (-2:2) * 30) +     xlab(\"Longitude\") + ylab(\"Latitude\") +     coord_fixed(1.3) +     theme_bw()     # species_map <- species_map + coord_map ()  # Mercator projection     # species_map <- species_map + coord_map(\"gilbert\") # Nice for the poles   return(map)   }"},{"path":"/articles/pr2_01_stats.html","id":"all-taxa-2","dir":"Articles","previous_headings":"","what":"All taxa","title":"PR2 statistics","text":"","code":"map_world() + geom_point(data=pr2, aes(x=pr2_longitude, y=pr2_latitude), fill=\"blue\", size=2, shape=21) +                ggtitle(\"PR2 - all sequences\")"},{"path":"/articles/pr2_01_stats.html","id":"photosynthetic-protists-2","dir":"Articles","previous_headings":"","what":"Photosynthetic protists","title":"PR2 statistics","text":"","code":"map_world() + geom_point(data=pr2_photo, aes(x=pr2_longitude, y=pr2_latitude), fill=\"red\", size=2, shape=21) +                ggtitle(\"PR2 - photosynthetic protists sequences\")"},{"path":"/articles/pr2_02_silva.html","id":"structure-of-silva-annotations","dir":"Articles","previous_headings":"","what":"Structure of Silva annotations","title":"Comparing PR2 vs. Silva annotations","text":"Total number PR2 sequences Silva annotation : 160322 contrast PR2, Silva fixed number taxonomy levels. maximum number levels 20. compute number number levels sequences level number distinct names column","code":"# Split the field silva_taxonomy into individual columns    taxo_ranks_pr2 = c(\"kingdom\", \"supergroup\", \"division\", \"class\", \"order\", \"family\", \"genus\", \"species\")   taxo_ranks_silva = str_c(\"rank_silva_\", 1:20)        pr2_silva <- pr2 %>%      select(pr2_accession, kingdom:species, silva_taxonomy) %>%    # Remove sequences for which we have no taxonomy from Silva     filter(!is.na(silva_taxonomy)) %>%    # Count the number of Silva taxonomy levels for each sequence     mutate(silva_levels = str_count(silva_taxonomy, \";\") + 1) %>%    # Split Silva taxonomy into 20 individuals columns     separate(col = silva_taxonomy, into = taxo_ranks_silva, sep = \";\", remove = FALSE) # Plot number of levels for each sequence   g1 <- ggplot(pr2_silva) +      geom_bar(aes(x = silva_levels, fill = as.factor(silva_levels))) +     labs(title = \"Silva annotations uses a variable number of levels\",          y = \"Number of sequences\",          x = \"Number of annotations levels in Silva\") +     theme_classic() +     scale_fill_viridis_d() +     guides(fill=FALSE)  # Compute and plot number of different names for each level of silva (column)    pr2_silva_taxa <- pr2_silva %>%      select(rank_silva_1:rank_silva_20) %>%      summarise_all(~ n_distinct(.)) %>%      pivot_longer(cols = contains(\"silva\"), names_to = \"level\", values_to = \"n_taxa_names\") %>%      mutate(level = as.integer(str_replace(level, \"rank_silva_\", \"\")))    g2 <- ggplot(pr2_silva_taxa) +    geom_col(aes(x = level, y = n_taxa_names, fill = level)) +   labs(title = \"Number of different taxonomic names for each annotation level\",        y = \"Number of different of taxa\",        x = \"Annotation level (or column) in Silva\") +   theme_classic() +   scale_fill_viridis_c() +   guides(fill=FALSE)        g1 / g2"},{"path":"/articles/pr2_02_silva.html","id":"comparison-of-taxonomic-composition-between-pr2-and-silva","dir":"Articles","previous_headings":"","what":"Comparison of taxonomic composition between PR2 and Silva","title":"Comparing PR2 vs. Silva annotations","text":"","code":"# Define a function for treemaps  pr2_treemap <- function(pr2, level1, level2) {   # Group   pr2_class <- pr2 %>%     count({{level1}},{{level2}}) %>%      filter(!is.na({{level2}})) %>%     ungroup()    # Do a treemap      ggplot(pr2_class, aes(area = n, fill = {{level2}}, subgroup = {{level1}}, label = {{level2}})) +            treemapify::geom_treemap()      ggplot(pr2_class, aes(area = n, fill= {{level1}}, subgroup = {{level1}}, label = {{level2}})) +     treemapify::geom_treemap() +     treemapify::geom_treemap_text(colour = \"white\", place = \"centre\", grow = TRUE) +     treemapify::geom_treemap_subgroup_border() +     treemapify::geom_treemap_subgroup_text(place = \"centre\", grow = T,                                             alpha = 0.5, colour = \"black\",                                             min.size = 0) +     theme_bw() +     scale_color_brewer() +     guides(fill = FALSE) }"},{"path":"/articles/pr2_02_silva.html","id":"pr2-supergroup-level","dir":"Articles","previous_headings":"Comparison of taxonomic composition between PR2 and Silva","what":"PR2 supergroup level","title":"Comparing PR2 vs. Silva annotations","text":"Silva level 3 corresponds roughly PR2 level 2 (supergroup). true taxa.","code":"g1 <- pr2_treemap(pr2_silva, supergroup, division) +     labs(title = \"PR2 - Supergroup\")    g2 <- pr2_treemap(pr2_silva, rank_silva_3, rank_silva_4) +     labs(title = \"Silva - level 3\")      g1+ g2"},{"path":[]},{"path":"/articles/pr2_02_silva.html","id":"many-annotations-contain-uncultured","dir":"Articles","previous_headings":"Some issues with Silva annotations","what":"Many annotations contain “uncultured”","title":"Comparing PR2 vs. Silva annotations","text":"really coherent use “uncultured” Silva annotations “uncultured” can appear one level next level correspond described taxon. Number sequences annotated Silva “uncultured”: nrow(table) taking one example Spirotrichea (Ciliophora).","code":"table <- pr2_silva %>%    filter(str_detect(silva_taxonomy, \"uncultured\")) table <- table %>%     filter(class == \"Spirotrichea\") %>%    select(pr2_accession, order:species, rank_silva_7:rank_silva_9 ) %>%    arrange(order, family, genus, species)    DT::datatable(table, caption=\"Spirotrichea (division= Ciliophora) taxa annotated as uncultured in Silva.  There is no real coherence in the number of ranks provided by Silva.\", rownames = FALSE)"},{"path":"/articles/pr2_02_silva.html","id":"species-for-which-higher-ranks-are-not-annotated","dir":"Articles","previous_headings":"Some issues with Silva annotations","what":"Species for which higher ranks are not annotated","title":"Comparing PR2 vs. Silva annotations","text":"example, extracted Alveolata sequences 1 4 levels annotations according Silva. can see, annotated supergroup species ranks missing PR2 levels clearly annotated.","code":"table <- pr2_silva %>%    filter(silva_levels <=4) %>%   filter(!str_detect(silva_taxonomy, \"uncultured\"))%>%    filter(supergroup == \"Alveolata\") %>%    select(pr2_accession, rank_silva_2:rank_silva_4, class:species)    DT::datatable(table, caption=\"Alveolata sequences with only 4 levels annotated in Silva\", rownames = FALSE)"},{"path":"/articles/pr2_03_geo_origin.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Plotting sequence location","text":"Install GitHub web site using devtools package","code":"install.packages(\"devtools\") devtools::install_github(\"pr2database/pr2database\")"},{"path":"/articles/pr2_03_geo_origin.html","id":"loading-the-database","dir":"Articles","previous_headings":"","what":"Loading the database","title":"Plotting sequence location","text":"","code":"library(\"pr2database\")  data(\"pr2\")"},{"path":"/articles/pr2_03_geo_origin.html","id":"load-the-libraries","dir":"Articles","previous_headings":"","what":"Load the libraries","title":"Plotting sequence location","text":"","code":"library(dplyr)   library(ggplot2)    # For plots"},{"path":"/articles/pr2_03_geo_origin.html","id":"plotting-number-of-sequences-per-country-and-ocean","dir":"Articles","previous_headings":"","what":"Plotting number of sequences per country and ocean","title":"Plotting sequence location","text":"good tutorial Margaret Mars Brisbin combine PR2 metadata Python locate sequences using metadata information (lat, long, country fuzzy localization): https://maggimars.github.io/eukGeoBlast/eGB.html https://github.com/maggimars/eukGeoBlast. code used incorporate geo-localisation information PR2 version 4.12.0","code":""},{"path":"/articles/pr2_03_geo_origin.html","id":"number-of-sequences-per-country-of-origin","dir":"Articles","previous_headings":"","what":"Number of sequences per country of origin","title":"Plotting sequence location","text":"","code":"pr2 %>%     count(pr2_country) %>%     filter(!is.na(pr2_country) & n > 500) %>%   ggplot(aes(x = reorder(pr2_country, n), y = n)) +     geom_col() +     coord_flip() +     xlab(\"\") +     ylab(\"Number of PR2 sequences\")"},{"path":"/articles/pr2_03_geo_origin.html","id":"number-of-sequences-per-ocean-of-origin","dir":"Articles","previous_headings":"","what":"Number of sequences per ocean of origin","title":"Plotting sequence location","text":"","code":"oceans <- pr2 %>%     count(pr2_ocean) %>%     filter(!is.na(pr2_ocean))    ggplot(oceans, aes(x = reorder(pr2_ocean, n), y = n)) +     geom_col() +     coord_flip() +     xlab(\"\")  + ylab(\"Number of PR2 sequences\")"},{"path":"/articles/pr2_04_decipher.html","id":"load-the-necessary-libraries","dir":"Articles","previous_headings":"","what":"Load the necessary libraries","title":"Train DECIPHER with PR2","text":"See instructions Bioconductor page install DECIPHER","code":"library(DECIPHER) library(stringr) library(dplyr) library(tidyr) library(purrr) library(stringr) library(rio) library(DT)"},{"path":"/articles/pr2_04_decipher.html","id":"define-parameters-and-files","dir":"Articles","previous_headings":"","what":"Define parameters and files","title":"Train DECIPHER with PR2","text":"Please refer DECIPHER manual information different parameters.","code":"file_training = \"examples/pr2_version_4.14.0_SSU_dada2.fasta.gz\" file_trained = \"examples/pr2_version_4.14.0_SSU.trained.sample.rds\" file_problems = \"examples/pr2_version_4.14.0_SSU.problems.sample.rds\"  maxGroupSize <- 10 # max sequences per label (>= 1) allowGroupRemoval <- FALSE  maxIterations <- 3 # must be >= 1"},{"path":[]},{"path":"/articles/pr2_04_decipher.html","id":"iterations","dir":"Articles","previous_headings":"Train model","what":"Iterations","title":"Train DECIPHER with PR2","text":"","code":"# Read data -------------------------------------------------------------  seqs <- readDNAStringSet(file_training)  # Sample 1000 sequences  --------------------------------------------------- seqs = seqs[sample(length(seqs), 1000)]   # Taxo groups -------------------------------------------------------------  # obtain the taxonomic assignments groups <- names(seqs) # sequence names  # All taxos must start with \"Root;\" groups <- str_c(\"Root;\",groups) names(seqs)<-groups  groupCounts <- table(groups) u_groups <- names(groupCounts) # unique groups cat(\"Number of groups: \", length(u_groups), '\\n') # number of group #> Number of groups:  742  taxid <- NULL  # Pruning group size ---  remove <- logical(length(seqs))  for (i in which(groupCounts > maxGroupSize)) {   index <- which(groups==u_groups[i])   keep <- sample(length(index), maxGroupSize)   remove[index[-keep]] <- TRUE }  cat(\"Number of sequences eliminated: \", sum(remove), \"\\n\") #> Number of sequences eliminated:  38  # Iteratively train classifier -----------------------------------------------  probSeqsPrev <- integer() # suspected problem sequences from prior iteration df.problems <- list()  cat(\"Number of iterations:\", maxIterations, \"\\n\", sep=\" \") #> Number of iterations: 3  for (i in seq_len(maxIterations)) {      cat(\"Training iteration: \", i, \"\\n\", sep=\"\")      # train the classifier   trainingSet <- LearnTaxa(seqs[!remove], names(seqs)[!remove],taxid)      # look for problem sequences   probSeqs <- trainingSet$problemSequences$Index      cat(\"Number of problem sequences: \", length(probSeqs), \"\\n\", sep=\"\")     # Exit if no more problem sequences or same problems as previous or reach max Iter      if (length(probSeqs)==0) {     cat(\"No problem sequences remaining.\\n\")     break   } else if (length(probSeqs)==length(probSeqsPrev) && all(probSeqsPrev==probSeqs)) {     cat(\"Iterations converged.\\n\")     break   }      if (i==maxIterations)     break       # remove any problem sequences    probSeqsPrev <- probSeqs      index <- which(!remove)[probSeqs]   remove[index] <- TRUE # remove all problem sequences      df.problems[[i]] <- data.frame(index, trainingSet$problemSequences)      if (!allowGroupRemoval) {     # replace any removed groups     missing <- !(u_groups %in% groups[!remove])     missing <- u_groups[missing]     if (length(missing) > 0) {       index <- index[groups[index] %in% missing]       remove[index] <- FALSE # don't remove     }   } } #> Training iteration: 1 #> ================================================================================ #>  #> Time difference of 976.07 secs #>  #> Number of problem sequences: 9 #> Training iteration: 2 #> ================================================================================ #>  #> Time difference of 846.92 secs #>  #> Number of problem sequences: 5 #> Training iteration: 3 #> ================================================================================ #>  #> Time difference of 882.58 secs #>  #> Number of problem sequences: 5"},{"path":"/articles/pr2_04_decipher.html","id":"save-problematic-sequences","dir":"Articles","previous_headings":"Train model","what":"Save problematic sequences","title":"Train DECIPHER with PR2","text":"Problematic sequences sequences assigned group belong training process. removed next iteration. point incoherences reference database.","code":"cat(\"Total number of sequences eliminated: \", sum(remove), \"\\n\")  #> Total number of sequences eliminated:  46 cat(\"Number of remaining problem sequences: \", length(probSeqs), \"\\n\") #> Number of remaining problem sequences:  5  df.problems <- reduce(df.problems, bind_rows) %>%    select(-Index)  saveRDS(df.problems, file_problems)   DT::datatable(head(df.problems, 20), width = 800, caption = \"First 20 problematic sequences.\")"},{"path":"/articles/pr2_04_decipher.html","id":"save-training-set","dir":"Articles","previous_headings":"Train model","what":"Save training set","title":"Train DECIPHER with PR2","text":"","code":"saveRDS(trainingSet,file_trained)"},{"path":[]},{"path":"/articles/pr2_04_decipher.html","id":"files","dir":"Articles","previous_headings":"Assign small metabarcoding data set","what":"Files","title":"Train DECIPHER with PR2","text":"","code":"taxo_levels <- c(\"kingdom\", \"supergroup\", \"division\", \"class\", \"order\", \"family\", \"genus\", \"species\")  file_to_assign = \"examples/Singapore ASV_sample.fasta\" file_to_assign_xlsx = \"examples/Singapore ASV_sample.xlsx\" file_assigned = \"examples/Singapore ASV_sample.decipher.4.14.0.rds\" file_assigned_xlsx = \"examples/Singapore ASV_sample.decipher.4.14.0.xlsx\""},{"path":"/articles/pr2_04_decipher.html","id":"assign","dir":"Articles","previous_headings":"Assign small metabarcoding data set","what":"Assign","title":"Train DECIPHER with PR2","text":"","code":"# Read training set    trainingSet <- readRDS(file_trained)  # Read sequences to assign   asv_to_assign <- import(file_to_assign_xlsx)   seq <- readDNAStringSet(file_to_assign)  # Get the taxonomy from the training set    ids <- IdTaxa(seq,                 trainingSet,                 type=\"extended\",                 strand=\"top\",                 threshold=0) #> ================================================================================ #>  #> Time difference of 7.47 secs      ids #>   A test set of class 'Taxa' with length 99 #>      confidence name                 taxon #>  [1]         6% asv_0004             Root; Bacteria; Bacteria_X; Proteobacter... #>  [2]        50% asv_2263             Root; Eukaryota; Alveolata; Dinoflagella... #>  [3]        36% asv_0664             Root; Eukaryota; Alveolata; Dinoflagella... #>  [4]        26% asv_1095             Root; Bacteria; Bacteria_X; Proteobacter... #>  [5]        24% asv_0953             Root; Bacteria; Bacteria_X; Proteobacter... #>  ...        ... ...                  ... #> [95]        13% asv_2793             Root; Eukaryota; Stramenopiles; Pseudofu... #> [96]         3% asv_2348             Root; Bacteria; Bacteria_X; Proteobacter... #> [97]        56% asv_1507             Root; Eukaryota; Alveolata; Dinoflagella... #> [98]         2% asv_1151             Root; Eukaryota; Opisthokonta; Metazoa; ... #> [99]        13% asv_2741             Root; Bacteria; Bacteria_X; Proteobacter...  # Transform to a dataframe # Note: ids are provided as a list so we need to transform to dataframe    n_seq <- length(ids)   df_rows <- list()  # Go through all the elements of the list  for(i in 1:n_seq){   seq_name <- names(ids[i])   taxonomy<- ids[[i]]$taxon   confidence <- ids[[i]]$confidence   df_rows[[i]] = data.frame(seq_name, taxonomy, confidence, taxo_level=c(\"Root\", taxo_levels)) }  df <- reduce(df_rows, bind_rows) %>%    filter(taxo_level !=\"Root\") %>%    pivot_wider(names_from = taxo_level, values_from = c(taxonomy, confidence))  # Save to file   saveRDS(df, file_assigned)  # Merge with original ASV file   asv_assigned <- left_join(asv_to_assign, df) %>%      relocate(sequence, .after = last_col())  # Save as xlsx file   export(asv_assigned, file_assigned_xlsx)  # Display first 20 ASVs   DT::datatable(head(asv_assigned, 20), width = 800, caption = \"First 20 ASV reassigned.\")"},{"path":"/articles/vignette-shiny-presentation.html","id":"pr2-shiny-application","dir":"Articles","previous_headings":"","what":"PR2 Shiny application","title":"Select data","text":"Note: application yet available (probably late December 2022). short description different panles","code":""},{"path":"/articles/vignette-shiny-presentation.html","id":"taxonomy","dir":"Articles","previous_headings":"PR2 Shiny application","what":"Taxonomy","title":"Select data","text":"Listing taxonomy used PR2 number sequences species First Select Taxa left Menu navigating menu selected taxonomy presse VALIDATE TAXA see table taxons reset taxonomy press RESET TAXA followed VALIDATE TAXA. can save reload favorites taxa bottom left screen","code":""},{"path":"/articles/vignette-shiny-presentation.html","id":"sequences","dir":"Articles","previous_headings":"PR2 Shiny application","what":"Sequences","title":"Select data","text":"Listing PR2 sequences selected taxa following information provided. can filter left menu sequences : * Length * Type samples following information provided * PR2 accession number * PR2 species assignement * Sequence length * Sample type annotated PR2 * Definition Taxonomy provided GenBank","code":""},{"path":"/articles/vignette-shiny-presentation.html","id":"download-selected-sequences","dir":"Articles","previous_headings":"PR2 Shiny application","what":"Download selected sequences","title":"Select data","text":"Download PR2 sequences metadata selected taxa can filter left menu sequences : * Length * Type samples description files provided page.","code":""},{"path":"/articles/vignette-shiny-presentation.html","id":"download-all-sequences","dir":"Articles","previous_headings":"PR2 Shiny application","what":"Download all sequences","title":"Select data","text":"page used use PR2 annotated metabarcodes contains links PR2 repository. Files provided : * dada2 * mothur * qiime * DECIPHER * vsearch * usearch","code":""},{"path":"/articles/vignette-shiny-presentation.html","id":"query","dir":"Articles","previous_headings":"PR2 Shiny application","what":"Query","title":"Select data","text":"can perform BLAST like search whole PR2 database (selected taxa). can filter sequences based similarity level download sequences well metadata.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vaulot. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vaulot D (2022). pr2database: PR2 database. R package version 4.14.0.","code":"@Manual{,   title = {pr2database: PR2 database},   author = {Daniel Vaulot},   year = {2022},   note = {R package version 4.14.0}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"ssu-rrna-gene-database","dir":"","previous_headings":"","what":"SSU rRNA gene database","title":"An R package for the PR2 reference database","text":"PR2 database initiated 2010 frame BioMarks project work developed previous ten years Plankton Group Station Biologique Roscoff. aim provide reference database carefully annotated 18S rRNA sequences using eight unique taxonomic fields (kingdom species). present contains 205,000 sequences. number metadata fields available many sequences, including geo-localisation, whether originates culture natural sample, host type etc… annotation PR2 performed experts taxonomic groups. One important project respect EukRef recently decided merge effort PR2. EukRef built bioinformatics pipelines used three workshops dedicated specific taxonomic groups.","code":""},{"path":"/index.html","id":"current-version","dir":"","previous_headings":"","what":"Current version","title":"An R package for the PR2 reference database","text":"Current version : 4.14.0 Last update : 25 June 2021  Link latest release Documentation","code":""},{"path":"/index.html","id":"downloading-pr2","dir":"","previous_headings":"","what":"Downloading PR2","title":"An R package for the PR2 reference database","text":"Flat files - latest release R package","code":"install.packages(devtools) devtools::install_github(\"pr2database/pr2database\")"},{"path":"/index.html","id":"pr2-statistics","dir":"","previous_headings":"","what":"PR2 statistics","title":"An R package for the PR2 reference database","text":"PR2 statistics","code":""},{"path":"/index.html","id":"core-team","dir":"","previous_headings":"","what":"Core Team","title":"An R package for the PR2 reference database","text":"Daniel VAULOT, Asian School Environment, Nanyang Technological University, SINGAPORE Javier del CAMPO, University Miami, USA Laure GUILLOU, CNRS-Sorbonne Université, Station Biologique, 29680 Roscoff FRANCE Frédéric MAHE, CIRAD, Montpellier, FRANCE","code":""},{"path":"/index.html","id":"scientific-committee-and-contributors","dir":"","previous_headings":"","what":"Scientific committee and contributors","title":"An R package for the PR2 reference database","text":"PR2 team","code":""},{"path":"/index.html","id":"please-cite","dir":"","previous_headings":"","what":"Please cite","title":"An R package for the PR2 reference database","text":"Guillou, L., Bachar, D., Audic, S., Bass, D., Berney, C., Bittner, L., Boutte, C. et al. 2013. Protist Ribosomal Reference database (PR2): catalog unicellular eukaryote Small Sub-Unit rRNA sequences curated taxonomy. Nucleic Acids Res. 41:D597–604.","code":""},{"path":[]},{"path":"/index.html","id":"id_18s-rrna-primer-database","dir":"","previous_headings":"Related Projects","what":"18S rRNA primer database","title":"An R package for the PR2 reference database","text":"PR2 primer database compilation primers found litterature silico analysis PR2 database.","code":""},{"path":"/index.html","id":"report-issues","dir":"","previous_headings":"","what":"Report issues","title":"An R package for the PR2 reference database","text":"Please report issue GitHub","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright 2012-2021 D. Vaulot, L. Guillou, J. del Campo, F. Mahé others Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/pr2.html","id":null,"dir":"Reference","previous_headings":"","what":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","title":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","text":"PR2 database provided data frame.","code":""},{"path":"/reference/pr2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","text":"","code":"pr2"},{"path":"/reference/pr2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","text":"data frame","code":""},{"path":"/reference/pr2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","text":"PR2 database - https://pr2-database.org/","code":""},{"path":"/reference/pr2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PR2 database - Eukaryotic 18S rRNA sequences. — pr2","text":"join following tables: pr2_main pr2_taxonomy pr2_sequence pr2_metadata pr2_silva metadata contains three types fields gb_ : originating GenBank entry eukref_ : annotated Eukref project pr2_ : annotated pr2 latitude longitude Description fields: https://pr2-database.org/documentation/pr2-fields","code":""},{"path":"/news/index.html","id":"pr2database-4140","dir":"Changelog","previous_headings":"","what":"pr2database 4.14.0","title":"pr2database 4.14.0","text":"Released: 2021-06-25 Detailed changes","code":""},{"path":"/news/index.html","id":"a-single-ssu-database-4-14-0","dir":"Changelog","previous_headings":"","what":"A single SSU database","title":"pr2database 4.14.0","text":"version 4.14.0, single SSU database provided contains sequences : * 18S rRNA nuclear nucleomorph * 16S rRNA plastid, apicoplast, chromatophore, mitochondrion * 16S rRNA small selection bacteria rationale database can now used detect bacterial sequences amplified either 18S rRNA “universal” primers. sequences can assigned Silva GTDB. order allow correct assignation software DECIPHER (IDTax) organelle, taxonomy appended 4 letters corresponding organelle","code":""},{"path":"/news/index.html","id":"major-groups-for-which-taxonomy-has-been-updated-4-14-0","dir":"Changelog","previous_headings":"","what":"Major groups for which taxonomy has been updated","title":"pr2database 4.14.0","text":"Apicomplexa Labyrinthulids Radiolaria Foraminifera Radiolaria","code":""},{"path":"/news/index.html","id":"pr2database-4130","dir":"Changelog","previous_headings":"","what":"pr2database 4.13.0","title":"pr2database 4.13.0","text":"Released: 2021-03-17 Detailed changes","code":""},{"path":"/news/index.html","id":"major-groups-for-which-taxonomy-has-been-updated-4-13-0","dir":"Changelog","previous_headings":"","what":"Major groups for which taxonomy has been updated","title":"pr2database 4.13.0","text":"Dinophyceae, Suessiales - Taxonomy updated (J. del Campo) Stramenopiles, Diatoms, Thalassiosirales - Taxonomy updated (L. Arsenieff) Stramenopiles, Pelagophyceae - Taxonomy updated (Ana Maria Cabello) Stramenopiles, Chrysophyceae - Taxonomy updated (D. Vaulot)","code":""},{"path":"/news/index.html","id":"other-changes-4-13-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"pr2database 4.13.0","text":"Adding sequences Roscoff Culture Collection (D. Vaulot) Adding sequences Silva identical existing sequences PR2 based hash sequence value. Adding Silva taxonomic annotation (D. Vaulot)","code":""},{"path":"/news/index.html","id":"pr2database-4120","dir":"Changelog","previous_headings":"","what":"pr2database 4.12.0","title":"pr2database 4.12.0","text":"Released: 2019-08-08 Geolocalisation sequences (D. Vaulot) Detailed changes","code":""},{"path":"/news/index.html","id":"major-groups-for-which-taxonomy-has-been-updated-4-12-0","dir":"Changelog","previous_headings":"","what":"Major groups for which taxonomy has been updated","title":"pr2database 4.12.0","text":"Apicomplexa - Taxonomy updated - 2619 new sequences, 5889+239 sequences updated, 89 sequences removed (J. del Campo) Chaetoceros - 196 new sequences added taxonomy updated (C. Gaonkar) Stramenopiles - Taxonomy updated (R. Massana)","code":""},{"path":"/news/index.html","id":"other-changes-4-12-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"pr2database 4.12.0","text":"16S plastid cyanobacteria sequences added PhytoRef database (J. Decelle/ D. Vaulot)","code":""},{"path":"/news/index.html","id":"pr2database-4111","dir":"Changelog","previous_headings":"","what":"pr2database 4.11.1","title":"pr2database 4.11.1","text":"Released: 2018-12-13 Various bug fixes. Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-4110","dir":"Changelog","previous_headings":"","what":"pr2database 4.11.0","title":"pr2database 4.11.0","text":"Released: 2018-10-30 Various bug fixes. Remove sequences shorter 500 bp (D. Vaulot) Chlorophyta - Three new classes introducted (Chloropicophyceae, Picocystophyceae, Palmophyllophyceae) - 198 sequences updated 104 sequences added (. Lopes dos Santos) Chlorophyta - Mamiellophyceae (Micromonas, Ostreococcus, Mantoniella) - 872 sequences updated 8 sequences added (D. Vaulot) Ciliophora - Except Spirotrichea - 4550 sequences updated, 2478 sequences added, 652 sequences removed (Eukref - V. Boscaro) Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-4100","dir":"Changelog","previous_headings":"","what":"pr2database 4.10.0","title":"pr2database 4.10.0","text":"Released: 2018-03-08 Fixing artefactual sequences, removing chimeras labelling reference sequences (D. Vaulot) Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-490","dir":"Changelog","previous_headings":"","what":"pr2database 4.9.0","title":"pr2database 4.9.0","text":"Released: 2018-02-20 Dinophyceae - Incorporation DinoRef database (1564 sequences verified updated, 213 added) (Solenn Mordret, Roberta Piredda, Diana Sarno) Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-480","dir":"Changelog","previous_headings":"","what":"pr2database 4.8.0","title":"pr2database 4.8.0","text":"Released: 2018-02-06 Cercozoa, Perkinsea (30 sequences) (Martina Strittmatter) Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-471","dir":"Changelog","previous_headings":"","what":"pr2database 4.7.1","title":"pr2database 4.7.1","text":"Released: 2017-11-20 Database transferred GitHub Ciliates (Spirotrichea) (C. Bachy, Wei-Ting Chen) Database transferred GitHub Detailed changes","code":""},{"path":"/news/index.html","id":"pr2database-46","dir":"Changelog","previous_headings":"","what":"pr2database 4.6","title":"pr2database 4.6","text":"Released: 2017-08-23 Bolidophyceae corrected according Kuwata et al. 2017 (3 env clades) (D. Vaulot) Pelagophyceae (D. Vaulot) Database Figshare","code":""},{"path":"/news/index.html","id":"pr2database-45","dir":"Changelog","previous_headings":"","what":"pr2database 4.5","title":"pr2database 4.5","text":"Released: 2016-12-17 Correct inconsistencies taxonomy (D. Vaulot) Break Chrysophyceae-Synurophyceae Chrysophyceae vs. Synurophyceae according Algaebase (D. Vaulot) Correct Haptophyta taxonomy follow PR2 rules (_X, _XX etc…) (D. Vaulot) Change CW-Chlamydomonadales Chlamydomonadales (D. Vaulot) Correct minor dinoflagellates taxonomy (Karlodinium) (D. Vaulot) Database Figshare","code":""},{"path":"/news/index.html","id":"pr2database-44","dir":"Changelog","previous_headings":"","what":"pr2database 4.4","title":"pr2database 4.4","text":"Released: 2016-11-10 Bolidophyceae corrected according Ichinomya et al. 2016 (D. Vaulot) Sequences N removed (D. Vaulot) Sequences GenBank removed (D. Vaulot) Database Figshare","code":""},{"path":"/news/index.html","id":"pr2database-43","dir":"Changelog","previous_headings":"","what":"pr2database 4.3","title":"pr2database 4.3","text":"Released: 2016-09-04 Chlorophyta (D. Vaulot) Database Figshare","code":""},{"path":"/news/index.html","id":"pr2database-42","dir":"Changelog","previous_headings":"","what":"pr2database 4.2","title":"pr2database 4.2","text":"Released: 2016-04-13 Haptophyta assignations corrected (B.Edvardsen) Database Figshare","code":""},{"path":"/news/index.html","id":"pr2database-41","dir":"Changelog","previous_headings":"","what":"pr2database 4.1","title":"pr2database 4.1","text":"Released: 2015-10-23 RCC Chlorophyta (M.Tragin)","code":""},{"path":"/news/index.html","id":"pr2database-40","dir":"Changelog","previous_headings":"","what":"pr2database 4.0","title":"pr2database 4.0","text":"Released: 2015-10-21 Haptophyta (B. Edvardsen)","code":""},{"path":"/news/index.html","id":"pr2database-30","dir":"Changelog","previous_headings":"","what":"pr2database 3.0","title":"pr2database 3.0","text":"Released: 2015-08-31 Chlorophyta (M. Tragin)","code":""},{"path":"/news/index.html","id":"pr2database-20","dir":"Changelog","previous_headings":"","what":"pr2database 2.0","title":"pr2database 2.0","text":"Released: 2015-02-07 Rhizaria (T. Biard)","code":""},{"path":"/news/index.html","id":"pr2database-11","dir":"Changelog","previous_headings":"","what":"pr2database 1.1","title":"pr2database 1.1","text":"Released: 2015-01-04 Transfer previous PR2 database (D. Vaulot)","code":""}]
